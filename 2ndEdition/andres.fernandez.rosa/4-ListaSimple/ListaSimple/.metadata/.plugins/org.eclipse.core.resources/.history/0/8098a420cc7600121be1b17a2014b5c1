package com.example.listacompleja;

import java.util.ArrayList;

import android.R.integer;
import android.R.string;
import android.app.ListActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;

public class Main extends ListActivity {
	
	
	// Definimos la estructura de los items de la lista
			public class Nodo 
			{
				public string mTitulo;
				public string mExplicacion;
				public Integer mImagen;
			}
	
	// Método onCreate necesario en todas las actividades de Android
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// Realizamos la llamada al método padre de onCreate
		super.onCreate(savedInstanceState);

		
		// Generamos un nuevo método para establecer los datos
		setDatos();

		
		// Generamos un nuevo adaptador (nuestro)
		mAdaptador = new MiAdaptador(this);
		
		// Lo seleccionamos para nuestra lista
		setListAdapter(mAdaptador);
		

		

		// Generamos un ArrayList de tipo Nodo para mostrar todos los items
		private static ArrayList<Nodo> mArray = new ArrayList<Nodo>();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	
	
	private void setDatos()
	{
		// Limpiamos el Array
		mArray.clear();
		
		// Generamos una instancia de Nodo (creamos 1 OBJETO de clase Nodo)
		Nodo Nodo1 = new Nodo();
		// Asignamos el atributo titulo al objeto Nodo1
		Nodo1.mTitulo = this.getResources().getString(R.string.titulo1);
		// Asignamos el atributo explicacion al objeto Nodo1
		Nodo1.mExplicacion = this.getResources().getString(R.string.explicacion1);
		// Cargamos la imagen de Ndo1
		Nodo1.mImagen = R.drawable.r1;
		// Cargamos en el Array el Nodo1
		mArray.add(Nodo1);
		
		// Realizamos las mismas operaciones para todos los nodos
		Nodo Nodo2 = new Nodo();
		
		Nodo2.mTitulo = this.getResources().getString(R.string.titulo2);
		Nodo2.mExplicacion = this.getResources().getString(R.string.explicacion2);
		Nodo2.mImagen = R.drawable.r2;
		
		mArray.add(Nodo2);
		
		
		Nodo Nodo3 = new Nodo();
		
		Nodo3.mTitulo = this.getResources().getString(R.string.titulo3);
		Nodo3.mExplicacion = this.getResources().getString(R.string.explicacion3);
		Nodo3.mImagen = R.drawable.r3;
		
		mArray.add(Nodo3);
				
	}

	// Creamos la nueva clase MiAdaptador extendiendo de BaseAdapter e
	// implementamos
	// métodos
	public static class MiAdaptador extends BaseAdapter {

		private Contexto mContexto;
		
		@Override
		public int getCount() {
			// gerCount retorna el nº de items que tiene la lista
			return 0;
		}

		@Override
		public Object getItem(int position) {
			// funcion que devuelve un item concreto
			return null;
		}

		@Override
		public long getItemId(int position) {
			// devuelve los id de los item
			return 0;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			// Este método getView devuelve una vista del item seleccionado
			return null;
		}

	}

}
